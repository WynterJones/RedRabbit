!function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=476)}({101:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},159:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const o="photon";class s{start(){return window.transport.request(o,"start",{data:null})}request(e){return console.log("Sending request to prisma client: ",e),window.transport.request(o,"request",{data:{query:e}})}stop(){return window.transport.request(o,"stop",{data:null})}}},160:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const o="project";class s{open(e){return window.transport.request(o,"open",{data:{id:e}})}create(e,t){return window.transport.request(o,"create",{data:{}})}connectOnly(e){return window.transport.request(o,"connect",{data:{}})}validate(e){return window.transport.request(o,"validate",{data:{}})}getProject(){return window.transport.request(o,"get",{data:null})}getAll(){return window.transport.request(o,"get-all",{data:null})}}},161:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const o="telemetry";class s{send(e){return window.transport.request(o,"send",{data:e})}}},181:function(e,t,n){(function(e){("undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:{}).SENTRY_RELEASE={id:"0.220.0"}}).call(this,n(101))},476:function(e,t,n){n(181),e.exports=n(482)},482:function(e,t,n){"use strict";n.r(t);const o=15;var s=n(159),r=n(160),i=n(161);window.transport=new class{constructor(){this.type="websocket",this.hooks={onConnect:()=>{},onDisconnect:()=>{}},this.requests={},this.requestIdCounter=0,this.queuedEvents=[],this.onOpen=()=>{console.log("Socket connection established"),this.hooks.onConnect(),this.reconnectTimeoutHandle&&(clearTimeout(this.reconnectTimeoutHandle),this.reconnectTimeoutHandle=void 0),console.log(`Replaying ${this.queuedEvents.length} queued events`),this.queuedEvents.length>0&&(this.queuedEvents.forEach(e=>this.socket.send(JSON.stringify({requestId:e.requestId,channel:e.channel,action:e.action,payload:e.payload}))),this.queuedEvents=[])},this.onClose=()=>{this.reconnectTimeoutHandle||(console.log("Socket connection interrupted"),this.hooks.onDisconnect())},this.onMessage=e=>{let t;try{return t=JSON.parse(e.data),this.requests[t.requestId].resolve(t.payload)}catch(t){console.log("Malformed response from server, ignoring",e.data,t)}},this.connect()}connect(){const{protocol:e,host:t}=window.location,n=`${e.replace(/http/,"ws")}//${t}`;this.socket=new WebSocket(n),this.socket.addEventListener("open",this.onOpen),this.socket.addEventListener("message",this.onMessage),this.socket.addEventListener("close",this.onClose)}disconnect(){this.socket.close()}reconnect(){console.log("Attempting to reconnect");let e=0;clearTimeout(this.reconnectTimeoutHandle),this.reconnectTimeoutHandle=void 0;const t=()=>{const n=100*Math.pow(2,e);e!==o?(console.log(`Retry connect after ${n}ms`),this.connect(),this.reconnectTimeoutHandle=setTimeout(()=>{e++,t()},n)):console.log(`${o} retry attempts failed. Giving up.`)};t()}request(e,t,n){const o=this.requestIdCounter;return this.requestIdCounter++,new Promise((s,r)=>{this.requests[o]={resolve:s,reject:r};const i={requestId:o,channel:e,action:t,payload:n};if(this.socket.readyState!==WebSocket.OPEN)return console.log("Websocket not open. Queueing this request:",JSON.stringify(i)),void this.queuedEvents.push(i);this.socket.send(JSON.stringify(i))})}},window.bus={photon:new s.a,project:new r.a,telemetry:new i.a,window:{resize:async()=>{}},update:{install:async()=>{}}}}});
//# sourceMappingURL=serverBus.js.map